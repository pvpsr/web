Q. 1) Create employee table as follows EMP (eno, ename, designation, salary). 
      Write Ajax program to select the employees name and print the selected employeeâ€™s details.

CREATE TABLE emp (
  eno SERIAL PRIMARY KEY,
  ename TEXT,
  designation TEXT,
  salary INT
);

INSERT INTO emp (ename, designation, salary) VALUES
('Amit', 'Manager', 50000),
('Neha', 'Clerk', 20000);


//index.html

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Employee Details</title>
    <script>
        function getDetails(name) {
            if (!name) return;
            fetch("get_emp.php?ename=" + name)
                .then(response => response.text())
                .then(data => document.getElementById("info").innerHTML = data);
        }
    </script>
</head>
<body>
    <h3>Select Employee:</h3>
    <select onchange="getDetails(this.value)">
        <option value="">--Select--</option>
        <option value="Amit">Amit</option>
        <option value="Neha">Neha</option>
        <option value="Raj">Raj</option>
    </select>
    <div id="info"></div>
</body>
</html>


//get_emp.php

<?php
// Connect to PostgreSQL
$conn = pg_connect("host=localhost dbname=yourdb user=youruser password=yourpass");
if (!$conn) { die("Database connection failed!"); }

$name = $_GET['ename'];  // Get employee name from AJAX
$query = pg_query($conn, "SELECT * FROM emp WHERE ename='$name'");
$row = pg_fetch_assoc($query);

// Display employee details
if ($row) {
    echo "<b>Emp No:</b> {$row['eno']}<br>";
    echo "<b>Name:</b> {$row['ename']}<br>";
    echo "<b>Designation:</b> {$row['designation']}<br>";
    echo "<b>Salary:</b> {$row['salary']}";
} else {
    echo "No record found!";
}
?>




Q.2

import re  
import nltk  
from nltk.tokenize import sent_tokenize  
from collections import Counter  

text = """Hello all, Welcome to Python Programming Academy. Python  
Programming Academy is a nice platform to learn new programming skills.  
It is difficult to get enrolled in this Academy."""  

text = re.sub(r"[^a-zA-Z\s]", "", text)  

sentences = sent_tokenize(text)  

word_frequencies = Counter(text.split())  

summary = max(sentences, key=lambda s: sum(word_frequencies[word] for word in s.split()))  

print("Summary:", summary)  
