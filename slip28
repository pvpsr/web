Q. 1) Write a PHP script using AJAX concept, to check user name and password are valid or Invalid (use
    database to store user name and password).



CREATE DATABASE user_db;
USE user_db;

CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL
);

INSERT INTO users (username, password) VALUES
('admin', '12345'),
('user1', 'password1');



//index.html

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Login</title>
    <script>
        function validateLogin() {
            let user = document.getElementById("user").value;
            let pass = document.getElementById("pass").value;
            let xhr = new XMLHttpRequest();
            xhr.open("POST", "validate_login.php", true);
            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            xhr.onload = function () {
                document.getElementById("result").innerHTML = this.responseText;
            };
            xhr.send("user=" + user + "&pass=" + pass);
        }
    </script>
</head>
<body>
    <h3>Login</h3>
    Username: <input type="text" id="user"><br>
    Password: <input type="password" id="pass"><br>
    <button onclick="validateLogin()">Login</button>
    <div id="result"></div>
</body>
</html>




//validate_login.php

<?php
$conn = new mysqli("localhost", "root", "", "user_db");

$user = $_POST['user'];
$pass = $_POST['pass'];

$result = $conn->query("SELECT * FROM users WHERE username='$user' AND password='$pass'");

echo ($result->num_rows > 0) ? "✅ Valid Login!" : "❌ Invalid Login!";
$conn->close();
?>





Q. 2 ) Build a simple linear regression model for Car Dataset.

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

data = {
    'Car_Age': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],                                                   
    'Car_Price': [500000, 450000, 400000, 350000, 300000, 250000, 200000, 150000, 100000, 50000]  
}

df = pd.DataFrame(data)

X = df[['Car_Age']].values  
Y = df['Car_Price'].values  

X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=0)

regressor = LinearRegression()
regressor.fit(X_train, y_train)

print("X_train:\n", X_train)
print("y_train:\n", y_train)
print("X_test:\n", X_test)
print("y_test:\n", y_test)

print("Coefficients:", regressor.coef_)
print("Intercept:", regressor.intercept_)
