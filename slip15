Q. 1) Write Ajax program to fetch suggestions when is user is typing in a textbox. 
      (eg like google suggestions. Hint create array of suggestions and matching string will be displayed) 


//index.html

<input type="text" onkeyup="showHint(this.value)">
<div id="result"></div>

<script>
function showHint(str) {
  if (str.length == 0) {
    document.getElementById("result").innerHTML = "";
    return;
  }
  const xhttp = new XMLHttpRequest();
  xhttp.onload = function() {
    document.getElementById("result").innerHTML = this.responseText;
  }
  xhttp.open("GET", "suggest.php?q=" + str, true);
  xhttp.send();
}
</script>


//suggest.php

<?php
$list = ["apple", "banana", "mango", "grapes", "orange"];
$q = strtolower($_GET["q"]);
$res = "";

foreach ($list as $item) {
  if (str_starts_with($item, $q)) {
    $res .= $item . "<br>";
  }
}

echo $res ?: "No match";
?>




Q. 2)Create the following dataset in python & Convert the categorical values into numeric format.Apply 
the apriori algorithm on the above dataset to generate the frequent itemsets and association rules. Repeat 
the process with different min_sup values. 



import pandas as pd
from mlxtend.preprocessing import TransactionEncoder
from mlxtend.frequent_patterns import apriori, association_rules

transactions = [
    ['bread', 'milk'],
    ['bread', 'diaper', 'beer', 'eggs'],
    ['milk', 'diaper', 'beer', 'coke'],
    ['bread', 'milk', 'diaper', 'beer'],
    ['bread', 'milk', 'diaper', 'coke']
]

te = TransactionEncoder()
df = pd.DataFrame(te.fit_transform(transactions), columns=te.columns_)

min_sup_values = [0.2, 0.4, 0.6]

for min_sup in min_sup_values:
    print(f"\nMin Support: {min_sup}")
    freq_items = apriori(df, min_support=min_sup, use_colnames=True)
    rules = association_rules(freq_items, metric="lift", min_threshold=1)
    
    print("\nFrequent Itemsets:\n", freq_items)
    print("\nAssociation Rules:\n", rules[['antecedents', 'consequents', 'support', 'confidence', 'lift']])
