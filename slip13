Q. 1) Write AJAX program where the user is requested to write his or her name in a text box, and the
      server keeps sending back responses while the user is typing. If the user name is not entered then the
      message displayed will be, “Stranger, please tell me your name!”. If the name is Rohit, Virat, Dhoni,
      Ashwin or Harbhajan , the server responds with “Hello, master !”. If the name is anything else, the
      message will be “, I don’t know you!” 


// index.html

<!DOCTYPE html>
<html>
<head>
    <title>Live Name Check</title>
    <script>
        function checkName(str) {
            if (!str) return document.getElementById("result").innerText = "Stranger, please tell me your name!";
            fetch("server.php?name=" + str)
                .then(res => res.text())
                .then(data => document.getElementById("result").innerText = data);
        }
    </script>
</head>
<body>
    <input type="text" onkeyup="checkName(this.value)" placeholder="Enter your name">
    <p id="result">Stranger, please tell me your name!</p>
</body>
</html>


//server.php

<?php
$masters = ["Rohit", "Virat", "Dhoni", "Ashwin", "Harbhajan"];
$name = $_GET['name'] ?? '';
echo $name ? (in_array($name, $masters) ? "Hello, master!" : "$name, I don’t know you!") : "Stranger, please tell me your name!";
?>




Q.2)Download nursery dataset from UCI. Build a linear regression model by identifying independent 
    and target variable. Split the variables into training and testing sets and print them. Build a simple linear 
    regression model for predicting purchases.


import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

data = {
    'Experience': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],  
    'Purchase_Amount': [1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000]  
}

df = pd.DataFrame(data)

X = df[['Experience']].values                
Y = df['Purchase_Amount'].values              

X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=0)

regressor = LinearRegression()
regressor.fit(X_train, y_train)

print("X_train:\n", X_train)
print("y_train:\n", y_train)
print("X_test:\n", X_test)
print("y_test:\n", y_test)
print("Coefficients:", regressor.coef_)
print("Intercept:", regressor.intercept_)
