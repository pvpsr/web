Q. 1) Create web Application that contains Voters details and check proper validation for (name,
      age, and nationality), as Name should be in upper case letters only, Age should not be less than
      18 yrs and Nationality should be Indian.(use HTML-AJAX-PHP) 


//index.html

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Voter Validation</title>
    <script>
        function validateVoter() {
            let name = document.getElementById("name").value;
            let age = document.getElementById("age").value;
            let nationality = document.getElementById("nationality").value;

            let xhr = new XMLHttpRequest();
            xhr.open("POST", "validate_voter.php", true);
            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            xhr.onload = function () {
                document.getElementById("result").innerHTML = this.responseText;
            };
            xhr.send("name=" + name + "&age=" + age + "&nationality=" + nationality);
        }
    </script>
</head>
<body>
    <h3>Voter Registration</h3>
    Name: <input type="text" id="name"><br>
    Age: <input type="number" id="age"><br>
    Nationality: <input type="text" id="nationality"><br>
    <button onclick="validateVoter()">Submit</button>
    <div id="result"></div>
</body>
</html>



//validate_voter.php

<?php
$name = $_POST['name'];
$age = $_POST['age'];
$nationality = $_POST['nationality'];

if ($name !== strtoupper($name)) {
    echo "Error: Name must be in UPPERCASE!";
} elseif ($age < 18) {
    echo "Error: Age must be 18 or above!";
} elseif (strtolower($nationality) !== "indian") {
    echo "Error: Nationality must be 'Indian'!";
} else {
    echo "Voter details are valid!";
}
?>




Q.2

import pandas as pd  
from mlxtend.preprocessing import TransactionEncoder  
from mlxtend.frequent_patterns import apriori, association_rules  

transactions = [  
    ['milk', 'bread', 'butter'],  
    ['bread', 'butter'],  
    ['milk', 'bread', 'jam'],  
    ['bread', 'butter', 'jam'],  
    ['milk', 'butter']  
]  

te = TransactionEncoder()  
te_ary = te.fit_transform(transactions)  
df = pd.DataFrame(te_ary, columns=te.columns_)  

frequent_itemsets = apriori(df, min_support=0.4, use_colnames=True)  
rules = association_rules(frequent_itemsets, metric="confidence", min_threshold=0.7)  

print("Frequent Itemsets:\n", frequent_itemsets)  
print("\nAssociation Rules:\n", rules)  
